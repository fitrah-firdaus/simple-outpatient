/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package org.simple.clinic.outpatient;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JMenuItem;
import org.simple.clinic.outpatient.model.Permission;
import org.simple.clinic.outpatient.view.booking.BookingPanel;
import org.simple.clinic.outpatient.view.doctor.RegistrationDoctorDataPanel;
import org.simple.clinic.outpatient.view.registration.RegistrationDataPanel;
import org.simple.clinic.outpatient.view.registration.RegistrationPanel;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

/**
 *
 * @author fef339
 */
@Component
public class MainOutpatientFrame extends javax.swing.JFrame {

    private final LoginFrame loginFrame;
    private final RegistrationPanel 
            registrationPanel;
    private final RegistrationDataPanel 
            registrationDataPanel;
    private final BookingPanel bookingPanel;
    private final RegistrationDoctorDataPanel registrationDoctorDataPanel;
    private static final Logger logger = 
            LoggerFactory.getLogger(
                    MainOutpatientFrame
                            .class);

    /**
     * Creates new form MainOutpatientFrame
     *
     * @param loginFrame
     * @param registrationPanel
     * @param bookingPanel
     * @param registrationDataPanel
     * @param registrationDoctorDataPanel
     */
    public MainOutpatientFrame(LoginFrame loginFrame, RegistrationPanel registrationPanel, BookingPanel bookingPanel, RegistrationDataPanel registrationDataPanel, 
            RegistrationDoctorDataPanel registrationDoctorDataPanel) {
        initComponents();
        disableAllMenu();
        this.loginFrame = loginFrame;
        this.registrationPanel = 
                registrationPanel;
        this.bookingPanel = bookingPanel;
        this.registrationDataPanel = 
                registrationDataPanel;
        this.registrationDoctorDataPanel = registrationDoctorDataPanel;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainScrollPane = new javax.swing.JScrollPane();
        applicationMenuBar = new javax.swing.JMenuBar();
        mainMenu = new javax.swing.JMenu();
        registrationMnItem = new javax.swing.JMenuItem();
        doctorMnItem = new javax.swing.JMenuItem();
        bookingMnItem = new javax.swing.JMenuItem();
        pharmacyMnItem = new javax.swing.JMenuItem();
        medRecMnItm = new javax.swing.JMenuItem();
        paymentMnItem = new javax.swing.JMenuItem();
        backOfficeMnItem = new javax.swing.JMenuItem();
        logoutMnItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(1024, 768));

        mainScrollPane.setPreferredSize(new java.awt.Dimension(1024, 768));

        mainMenu.setText("Menu");

        registrationMnItem.setText("Registration");
        registrationMnItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrationMnItemActionPerformed(evt);
            }
        });
        mainMenu.add(registrationMnItem);

        doctorMnItem.setText("Doctor");
        doctorMnItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorMnItemActionPerformed(evt);
            }
        });
        mainMenu.add(doctorMnItem);

        bookingMnItem.setText("Booking");
        bookingMnItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingMnItemActionPerformed(evt);
            }
        });
        mainMenu.add(bookingMnItem);

        pharmacyMnItem.setText("Pharmacy");
        mainMenu.add(pharmacyMnItem);

        medRecMnItm.setText("Medical Record");
        mainMenu.add(medRecMnItm);

        paymentMnItem.setText("Payment");
        mainMenu.add(paymentMnItem);

        backOfficeMnItem.setText("Back Office");
        mainMenu.add(backOfficeMnItem);

        logoutMnItem.setText("Logout");
        logoutMnItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutMnItemActionPerformed(evt);
            }
        });
        mainMenu.add(logoutMnItem);

        applicationMenuBar.add(mainMenu);

        setJMenuBar(applicationMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 744, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logoutMnItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutMnItemActionPerformed
        loginFrame.clearData();
        loginFrame.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_logoutMnItemActionPerformed

    private void registrationMnItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrationMnItemActionPerformed
        logger.info(
                "Registration Menu "
                        + "Clicked");
        mainScrollPane
                .getViewport().removeAll();
        mainScrollPane
                .setViewportView(
                        registrationDataPanel
                );
        registrationDataPanel.loadData();
        this.setTitle("Registration");
        revalidate();
    }//GEN-LAST:event_registrationMnItemActionPerformed

    private void bookingMnItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingMnItemActionPerformed
        logger.info("Booking Menu Clicked");
        mainScrollPane.getViewport().removeAll();
        mainScrollPane.setViewportView(bookingPanel);
        this.setTitle("Booking");
        revalidate();
    }//GEN-LAST:event_bookingMnItemActionPerformed

    private void doctorMnItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorMnItemActionPerformed
        logger.info("Doctor Menu Clicked");
        mainScrollPane.getViewport().removeAll();
        mainScrollPane.setViewportView(registrationDoctorDataPanel);
        registrationDoctorDataPanel.loadData();
        this.setTitle("Doctor");
        revalidate();
    }//GEN-LAST:event_doctorMnItemActionPerformed

    private void disableAllMenu() {
        backOfficeMnItem.setVisible(false);
        bookingMnItem.setVisible(false);
        medRecMnItm.setVisible(false);
        paymentMnItem.setVisible(false);
        pharmacyMnItem.setVisible(false);
        registrationMnItem.setVisible(false);
    }

    public void setPermission(List<Permission> 
            permissionList) {
        logger.info("SETTING PERMISSION");
        Map<String, JMenuItem> mapMenuItem = 
                new HashMap<>();
        for (int i = 0; i < mainMenu
                .getItemCount(); i++) {
            mapMenuItem.put(mainMenu
                    .getItem(i).getText(), 
                    mainMenu
                            .getItem(i));
        }
        permissionList.forEach((Permission t)
                -> {
            mapMenuItem.computeIfPresent(
                    t.getMenuId()
                            .getMenuName(), 
                    (var key, var val) -> {
                val.setVisible(true);
                return val;
            });
        });
    }

    public void clearData() {
        mainScrollPane.setViewportView(null);
    }
    
    public void updateScrollPane(java.awt.Component component){
        mainScrollPane.getViewport().removeAll();
        mainScrollPane.setViewportView(component);
        component.setVisible(true);
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar applicationMenuBar;
    private javax.swing.JMenuItem backOfficeMnItem;
    private javax.swing.JMenuItem bookingMnItem;
    private javax.swing.JMenuItem doctorMnItem;
    private javax.swing.JMenuItem logoutMnItem;
    private javax.swing.JMenu mainMenu;
    private javax.swing.JScrollPane mainScrollPane;
    private javax.swing.JMenuItem medRecMnItm;
    private javax.swing.JMenuItem paymentMnItem;
    private javax.swing.JMenuItem pharmacyMnItem;
    private javax.swing.JMenuItem registrationMnItem;
    // End of variables declaration//GEN-END:variables
}
